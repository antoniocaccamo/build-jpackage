name: Create Release

on: [push]

jobs:
  build:
    name: Create Release
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v2
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v1
      with:
        java-version: 15

# BUILD FOR DISTRIBUTION
    - id: build-linux
      name: Build distribution on Linux
      if: ${{ runner.os == 'Linux-disabled' }}
      run: |
        gradle -v
        gradle build
        jpackage --verbose @jpackage.cfg @jpackage-linux.cfg
    - id: build-win
      name: Build distribution on Windows
      if: ${{ runner.os == 'Windows' }}
      run: |
        gradle -v
        gradle build
        jpackage --verbose "@jpackage.cfg" "@jpackage-win.cfg"
        dir .\consoleapp\build\distributions

# CREATE GITHUB RELEASE AND ADD ASSETS
    - id: create-release
      name: Create GitHub release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: release-${{ github.sha }}
        draft: false
        prerelease: false
    - id: upload-release-linux
      name: Upload consoleapp Linux distribution
      if: ${{ runner.os == 'Linux-disabled' }}
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./consoleapp/build/distributions/consoleapp_0.0.1-1_amd64.deb
        asset_name: consoleapp_0.0.1-1_amd64.deb
        asset_content_type: application/x-binary
